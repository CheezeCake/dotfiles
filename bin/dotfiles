#!/usr/bin/perl -w

use strict;
#use diagnostics;
use Env;
use Getopt::Long qw(:config no_ignore_case bundling);
use File::Compare;
use File::Basename;

my $home = $ENV{"HOME"};
my $dotfilesdir = "$home/.dotfiles";
my @repofiles = `git --git-dir=$dotfilesdir/.git ls-files`;

#arguments
my $delete;
my $force;
GetOptions('d' => \$delete, 'f' => \$force) or die ("Error in command line arguments\n");

sub add
{
    chdir $dotfilesdir;

    foreach (@_)
    {
        system 'cp', '-r', "$home/$_", "$dotfilesdir/$_";
        system 'git', 'add', $_;
        print "add: $_\n";
    }

    system 'git', 'commit', '-am', "add: @_";
    system 'git', 'push';
}

sub rm
{
    my @rmfiles;
    chdir $dotfilesdir;

    foreach (@_)
    {
        push @rmfiles, $_;
        system 'git', 'rm', '-f', $_;
        system 'rm', '-rf', "$dotfilesdir/$_";
        system 'rm', '-rf', "$home/$_" if($delete);
    }

    system 'git', 'commit', '-am', 'rm: '.join(", ", @rmfiles);
    system 'git', 'push';
}

sub push
{
    chdir $dotfilesdir;

    my $change = 0;
    foreach (@repofiles)
    {
        chomp;
        my $f = "$home/$_";
        my $repof = "$dotfilesdir/$_";

        if(compare($f, $repof) == 1)
        {
            system 'cp', $f, $repof;
            system 'git', 'commit', '-am', 'update: '.basename($f);
            $change = 1;
        }
    }

    system 'git', 'push' if($change);
}

sub pull
{
    chdir $dotfilesdir;

    system 'git', 'pull';
    foreach (@repofiles)
    {
        chomp;
        my $f = "$home/$_";
        my $repof = "$dotfilesdir/$_";

        if(compare($f, $repof) == 1)
        {
            system 'mv', $f, "$f.old";
            system 'cp', $repof, $f;
            print "$f saved as $f.old\n";
        }
    }
}

sub clean
{
    foreach (@repofiles)
    {
        chomp;
        my $file = "$home/$_.old";

        if (-e $file)
        {
            print 'rm ', $file, "\n";
            system 'rm', $file;
        }
    }
}

die "usage: dotfiles add|rm|pull|push|clean [file ...]\n" if(scalar(@ARGV) == 0);
(-e $home) or die "cant locale homedir (environement variable HOME is not set)\n";

my $cmd = shift;

if($cmd eq 'add') { &add(@ARGV); }
elsif($cmd eq 'rm') { &rm(@ARGV); }
elsif($cmd eq 'pull') { &pull(); }
elsif($cmd eq 'push')
{
    if($force)
    {
        chdir $dotfilesdir;
        system 'git', 'push';
    }
    else { &push(); }
}
elsif($cmd eq 'clean') { &clean(); }
else { print $cmd, ': unknown command', "\n"; }
